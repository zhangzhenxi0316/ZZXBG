[{"/Users/zzx/Project/zzxbg/admin/src/index.js":"1","/Users/zzx/Project/zzxbg/admin/src/App.js":"2","/Users/zzx/Project/zzxbg/admin/src/pages/Login/Login.jsx":"3","/Users/zzx/Project/zzxbg/admin/src/pages/Admin/Admin.jsx":"4","/Users/zzx/Project/zzxbg/admin/src/pages/Login/index.js":"5","/Users/zzx/Project/zzxbg/admin/src/pages/Admin/index.js":"6","/Users/zzx/Project/zzxbg/admin/src/pages/Admin/AddArticle/AddArticle.jsx":"7","/Users/zzx/Project/zzxbg/admin/src/pages/ArticleList/ArticleList.jsx":"8","/Users/zzx/Project/zzxbg/admin/src/util/index.js":"9","/Users/zzx/Project/zzxbg/admin/src/pages/Admin/AddArticle/index.js":"10","/Users/zzx/Project/zzxbg/admin/src/pages/ArticleList/index.js":"11"},{"size":183,"mtime":1607626215446,"results":"12","hashOfConfig":"13"},{"size":351,"mtime":1607714367167,"results":"14","hashOfConfig":"13"},{"size":2387,"mtime":1607886538491,"results":"15","hashOfConfig":"13"},{"size":2695,"mtime":1607886318660,"results":"16","hashOfConfig":"13"},{"size":216,"mtime":1607679485178,"results":"17","hashOfConfig":"13"},{"size":228,"mtime":1607678745766,"results":"18","hashOfConfig":"13"},{"size":8807,"mtime":1608057560427,"results":"19","hashOfConfig":"13"},{"size":2996,"mtime":1607886479613,"results":"20","hashOfConfig":"13"},{"size":200,"mtime":1608101063043,"results":"21","hashOfConfig":"13"},{"size":156,"mtime":1607703090838,"results":"22","hashOfConfig":"13"},{"size":112,"mtime":1607716009478,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1v8ix9v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zzx/Project/zzxbg/admin/src/index.js",[],["49","50"],"/Users/zzx/Project/zzxbg/admin/src/App.js",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Login/Login.jsx",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Admin/Admin.jsx",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Login/index.js",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Admin/index.js",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Admin/AddArticle/AddArticle.jsx",["51"],"import React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\nimport { Row, Col, Input, Select, Button, DatePicker, message } from \"antd\";\nimport * as style from \"./index\";\n// import hljs from \"highlight.js\";\nimport \"highlight.js/styles/monokai-sublime.css\";\nimport axiosInstance from \"../../../util/index\";\nconst { Option } = Select;\nconst { TextArea } = Input;\nmarked.setOptions({\n  renderer: marked.Renderer(),\n  gfm: true, //github样式\n  pedantic: false, //容错\n  sanitize: false, //忽略html\n  tables: true, //github table样式\n  breaks: false,\n  smartLists: true,\n  smartypants: false,\n  xhtml: false,\n  highlight: function (code) {\n    return window.hljs.highlightAuto(code).value;\n  },\n});\n\nfunction AddArticle(props) {\n  const [articleId, setArticleId] = useState(0); //0是新增，1 是修改\n  const [articleTitle, setArticleTitle] = useState(\"\"); //title\n  const [articleContent, setArticleContent] = useState(\"\");\n  const [markdownContent, setMarkdownContent] = useState(\"预览内容\");\n  const [introducemd, setIntroducemd] = useState(\"\");\n  const [introducehtml, setIntroducehtml] = useState(\"等待编辑\");\n  const [showDate, setShowDate] = useState();\n  const [newType, setNewType] = useState(\"\");\n  const [showNewType, setShowNewType] = useState(false);\n  // const [updateDate,setup]\n  const [typeInfo, setTypeInfo] = useState([]);\n  const [typename,setTypename] = useState('')\n  const [selectedType, setSelectType] = useState();\n  const [showDateSwitch,setShowDateSwitch] = useState(true)\n  useEffect(() => {\n    let id = props.match.params.id\n    // console.log(id) \n    if(id){\n      // console.log(111)\n      // 修改\n      setArticleId(1)\n      axiosInstance.request('/admin/getArticleById?id='+id).then(res=>{\n        if(res.data.code===301){props.history.push('/login')}\n        setArticleTitle (res.data.title) \n        setArticleContent (res.data.article_content) \n        setMarkdownContent (marked(res.data.article_content))\n        setIntroducemd (res.data.introduce);\n        setIntroducehtml (marked(res.data.introduce) );\n        setShowDateSwitch(false)\n        setSelectType(res.data.typeId)\n        setTypename(res.data.typeName)\n        setShowDate(res.data.addTime)\n        // console.log(res.data.typeId)\n      }).then(res=>{\n        if (res.data.code === 301) {\n          message.error(\"重新登陆管理系统\");\n          props.history.push(\"/\");\n        }\n        else message.success('文章加载完成')\n      })\n    }\n    axiosInstance.request(\"/admin/getArticleTypes\").then((res) => {\n      if(res.data.code===301){props.history.push('/login')}\n      //   console.log(res);\n      if (res.data.code === 301) {\n        message.error(\"重新登陆管理系统\");\n        props.history.push(\"/\");\n      } else {\n        setTypeInfo(res.data);\n      }\n    });\n    let a = localStorage.getItem(\"articleContent\");\n    let b = localStorage.getItem(\"introducemd\");\n    if (a) {\n      setArticleContent(a);\n      setMarkdownContent(marked(a));\n      message.success(\"缓存文章内容加载成功\");\n    }\n    if (b) {\n      setIntroducemd(b);\n      setIntroducehtml(marked(b));\n      message.success(\"缓存文章标题加载成功\");\n    }\n  }, []);\n  function changeContent(e) {\n    let value = e.target.value;\n    setArticleContent(e.target.value);\n    let html = marked(value);\n    setMarkdownContent(html);\n    // console.log(html)\n  }\n  function changeIntroduce(e) {\n    setIntroducemd(e.target.value);\n    setIntroducehtml(marked(e.target.value));\n  }\n  function optionChange(e) {\n    setSelectType(e);\n    console.log(e);\n    if (e === \"add\") setShowNewType(true);\n    else setShowNewType(false);\n  }\n  function saveArticle() {\n    // console.log(newType)\n    // 保存文章\n    // localStorage.setItem('articleTitle',articleTitle)\n    localStorage.setItem(\"articleContent\", articleContent);\n    localStorage.setItem(\"introducemd\", introducemd);\n    message.success(\"保存成功\");\n  }\n  function submit() {\n    if (!articleTitle) {\n      message.error(\"文章标题不能为空\");\n      return;\n    } else if (!articleContent) {\n      message.error(\"文章内容不能为空\");\n      return;\n    } else if (!showDate) {\n      message.error(\"文章日期不能为空\");\n      return;\n    } else if (!introducemd) {\n      message.error(\"文章简介不能为空\");\n      return;\n    } else if (!selectedType) {\n      message.error(\"类型不能为空\");\n\n      return;\n    } else if (selectedType === \"add\" && !newType) {\n      message.error(\"自定义类型不能为空\");\n      return;\n    }\n    let id = props.match.params.id\n    axiosInstance\n      .request({\n        url: \"/admin/addArticle\",\n        method: \"POST\",\n        data: {\n          id,\n          articleid: articleId,\n          title: articleTitle,\n          article_content: articleContent,\n          introduce: introducemd,\n          addTime: showDate,\n          type_id: selectedType,\n          typeName: newType,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        if (res.data.code === 301) {\n          message.error(\"重新登陆管理系统\");\n          props.history.push(\"/\");\n        }else{\n          message.success(\"发布成功\");\n        props.history.push('/admin/list')\n        }\n        \n      })\n      .catch((err) => {\n        console.log(err);\n        message.error(\"发布失败\");\n      });\n  }\n  function cleanArticle(){\n    localStorage.removeItem(\"articleContent\")\n    localStorage.removeItem(\"introducemd\")\n  }\n  return (\n    <style.AddArticleWrapper>\n      <Row gutter={5}>\n        <Col span={18}>\n          <Row gutter={10}>\n            <Col span={16}>\n              <Input\n                value={articleTitle}\n                placeholder=\"博客标题\"\n                size=\"large\"\n                onChange={(e) => {\n                  setArticleTitle(e.target.value);\n                }}\n              />\n            </Col>\n            <Col span={4}>\n              <Select\n                onChange={optionChange}\n                placeholder={typename?typename:\"请选择类别\"}\n                size=\"large\"\n                // defaultValue={newType}\n              >\n                {typeInfo.map((item) => {\n                  return (\n                    <Option size=\"large\" key={item.id} value={item.id}>\n                      {item.typeName}\n                    </Option>\n                  );\n                })}\n                <Option value=\"add\">添加新类别</Option>\n              </Select>\n            </Col>\n            <Col span={4}>\n              {showNewType && (\n                <Input\n                  value={newType}\n                  size=\"large\"\n                  placeholder=\"输入新类别\"\n                  onChange={(e) => setNewType(e.target.value)}\n                ></Input>\n              )}\n            </Col>\n          </Row>\n          <br></br>\n          <Row gutter={10}>\n            <Col span={12}>\n              <TextArea\n                value={articleContent}\n                className=\"markdown-content\"\n                onChange={changeContent}\n                rows={35}\n                placeholder=\"Write Markdown\"\n              />\n            </Col>\n            <Col span={12}>\n              <div\n                className=\"show-html\"\n                dangerouslySetInnerHTML={{ __html: markdownContent }}\n              ></div>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={6}>\n          <Row>\n            <Col span={24}>\n              <Button className=\"btn\" size=\"large\" onClick={saveArticle}>\n                暂存文章\n              </Button>\n              <Button className=\"btn\" size=\"large\" type=\"primary\" onClick={submit}>\n                提交文章\n              </Button>\n              <Button className=\"btn\" size=\"large\" onClick={cleanArticle}>\n                清除缓存文章\n              </Button>\n            </Col>\n            <Col span={24}>\n              <br></br>\n              <TextArea\n                value={introducemd}\n                rows={4}\n                onChange={changeIntroduce}\n                placeholder=\" article introduce\"\n              ></TextArea>\n              <div\n                className=\"introduce-html\"\n                dangerouslySetInnerHTML={{ __html: introducehtml }}\n              ></div>\n            </Col>\n            <Col span={12}>\n              {showDateSwitch&&<div className=\"date-select\">\n                <DatePicker\n                  onChange={(date, dateString) => {\n                    setShowDate(dateString);\n                  }}\n                  placeholder=\"发布日期\"\n                  size=\"large\"\n                />\n              </div>}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </style.AddArticleWrapper>\n  );\n}\nexport default AddArticle;\n","/Users/zzx/Project/zzxbg/admin/src/pages/ArticleList/ArticleList.jsx",["52"],"import React, { useState, useEffect } from \"react\";\nimport { List, Row, Col, Modal, message, Button } from \"antd\";\nimport axiosInstance from \"../../util/index\";\nimport * as style from \"./index\";\nconst { confirm } = Modal;\nfunction ArticleList(props) {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    axiosInstance.request(\"/admin/getArticleList\").then((res) => {\n      if (res.data.code === 301) {\n        message.error(\"重新登陆管理系统\");\n        props.history.push(\"/\");\n      } else setList(res.data);\n    });\n  }, []);\n  function deleteArticle(id) {\n    confirm({\n      title: \"确定要删除这篇文章吗\",\n      content: \"如果点击ok 文章永远丢失\",\n      onOk() {\n        axiosInstance\n          .request({\n            url: \"/admin/deleteArticleById\",\n            method: \"post\",\n            data: { id },\n          })\n          .then((res) => {\n            message.success(\"文章删除成功\");\n            axiosInstance.request(\"/admin/getArticleList\").then((res) => {\n              if (res.data.code === 301) {\n                message.error(\"重新登陆管理系统\");\n                props.history.push(\"/\");\n              } else setList(res.data);\n            });\n          });\n      },\n      onCancel() {\n        message.success(\"文章取消操作\");\n      },\n    });\n  }\n  function AlertArticle(id) {\n    props.history.push(\"/admin/add/\" + id);\n  }\n  return (\n    <style.ArticleListBox>\n      <List\n        header={\n          <Row className=\"list-div\">\n            <Col span={8}>\n              <strong>标题</strong>\n            </Col>\n            <Col span={4}>\n              <strong>类别</strong>\n            </Col>\n            <Col span={4}>\n              <strong>发布时间</strong>\n            </Col>\n            <Col span={4}>\n              <strong>浏览量</strong>\n            </Col>\n            <Col span={4}>\n              <strong>操作</strong>\n            </Col>\n          </Row>\n        }\n        bordered\n        dataSource={list}\n        renderItem={(item) => {\n          return (\n            <List.Item>\n              <Row className=\"list-div\">\n                <Col span={8}>{item.title}</Col>\n                <Col span={4}>{item.typeName}</Col>\n                <Col span={4}>{item.addTime}</Col>\n                <Col span={4}>{item.view_count}</Col>\n                <Col span={4}>\n                  <Button\n                    type=\"primary\"\n                    onClick={() => {\n                      AlertArticle(item.id);\n                    }}\n                  >\n                    修改\n                  </Button>\n                  &nbsp;\n                  <Button\n                    onClick={() => {\n                      deleteArticle(item.id);\n                    }}\n                  >\n                    删除\n                  </Button>\n                </Col>\n              </Row>\n            </List.Item>\n          );\n        }}\n      />\n    </style.ArticleListBox>\n  );\n}\nexport default ArticleList;\n","/Users/zzx/Project/zzxbg/admin/src/util/index.js",[],"/Users/zzx/Project/zzxbg/admin/src/pages/Admin/AddArticle/index.js",[],"/Users/zzx/Project/zzxbg/admin/src/pages/ArticleList/index.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":89,"column":6,"nodeType":"59","endLine":89,"endColumn":8,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":15,"column":6,"nodeType":"59","endLine":15,"endColumn":8,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.history' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["65"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [props.history, props.match.params.id]",{"range":"71","text":"72"},"Update the dependencies array to be: [props.history]",{"range":"73","text":"74"},[3082,3084],"[props.history, props.match.params.id]",[527,529],"[props.history]"]